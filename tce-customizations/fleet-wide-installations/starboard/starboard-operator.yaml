apiVersion: v1
kind: ConfigMap
metadata:
  name: starboard-operator
data:
  data: |
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: starboard-system
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: starboard-operator
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: starboard-operator
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
          - pods/log
          - replicationcontrollers
          - services
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - nodes
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - ""
        resources:
          - configmaps
          - secrets
          - serviceaccounts
        verbs:
          - list
          - watch
          - get
          - create
          - update
      - apiGroups:
          - ""
        resources:
          - secrets
        verbs:
          - delete
      - apiGroups:
          - ""
        resources:
          - events
        verbs:
          - create
      - apiGroups:
          - apps
        resources:
          - replicasets
          - statefulsets
          - daemonsets
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
          - cronjobs
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - rbac.authorization.k8s.io
        resources:
          - roles
          - rolebindings
          - clusterroles
          - clusterrolebindings
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - apiextensions.k8s.io
        resources:
          - customresourcedefinitions
        verbs:
          - get
          - list
          - watch
      - apiGroups:
          - batch
        resources:
          - jobs
        verbs:
          - create
          - delete
      - apiGroups:
          - aquasecurity.github.io
        resources:
          - vulnerabilityreports
          - configauditreports
          - clusterconfigauditreports
          - ciskubebenchreports
        verbs:
          - get
          - list
          - watch
          - create
          - update
          - delete
      - apiGroups:
          - coordination.k8s.io
        resources:
          - leases
        verbs:
          - create
          - get
          - update
    ---
    apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: starboard-operator
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: starboard-operator
    subjects:
      - kind: ServiceAccount
        name: starboard-operator
        namespace: starboard-system
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: starboard
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    ---
    apiVersion: v1
    kind: Secret
    metadata:
      name: starboard-trivy-config
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: starboard
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    data:
      vulnerabilityReports.scanner: "Trivy"
      configAuditReports.scanner: "Polaris"
      kube-bench.imageRef: "docker.io/aquasec/kube-bench:v0.6.5"
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: starboard-trivy-config
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    data:
      trivy.imageRef: "docker.io/aquasec/trivy:0.20.0"
      trivy.mode: "Standalone"
      trivy.severity: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
      trivy.resources.requests.cpu: 100m
      trivy.resources.requests.memory: 100M
      trivy.resources.limits.cpu: 500m
      trivy.resources.limits.memory: 500M
    ---
    apiVersion: v1
    kind: ConfigMap
    metadata:
      name: starboard-polaris-config
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    data:
      polaris.imageRef: "quay.io/fairwinds/polaris:4.2"
      polaris.resources.requests.cpu: "50m"
      polaris.resources.requests.memory: "50M"
      polaris.resources.limits.cpu: "300m"
      polaris.resources.limits.memory: "300M"
      polaris.config.yaml: |
        checks:
          # reliability
          multipleReplicasForDeployment: ignore
          priorityClassNotSet: ignore
          # resources
          cpuRequestsMissing: warning
          cpuLimitsMissing: warning
          memoryRequestsMissing: warning
          memoryLimitsMissing: warning
          # images
          tagNotSpecified: danger
          pullPolicyNotAlways: ignore
          # healthChecks
          readinessProbeMissing: warning
          livenessProbeMissing: warning
          # networking
          hostNetworkSet: warning
          hostPortSet: warning
          # security
          hostIPCSet: danger
          hostPIDSet: danger
          notReadOnlyRootFilesystem: warning
          privilegeEscalationAllowed: danger
          runAsRootAllowed: warning
          runAsPrivileged: danger
          dangerousCapabilities: danger
          insecureCapabilities: warning
        exemptions:
          - controllerNames:
            - kube-apiserver
            - kube-proxy
            - kube-scheduler
            - etcd-manager-events
            - kube-controller-manager
            - kube-dns
            - etcd-manager-main
            rules:
            - hostPortSet
            - hostNetworkSet
            - readinessProbeMissing
            - livenessProbeMissing
            - cpuRequestsMissing
            - cpuLimitsMissing
            - memoryRequestsMissing
            - memoryLimitsMissing
            - runAsRootAllowed
            - runAsPrivileged
            - notReadOnlyRootFilesystem
            - hostPIDSet
          - controllerNames:
            - kube-flannel-ds
            rules:
            - notReadOnlyRootFilesystem
            - runAsRootAllowed
            - notReadOnlyRootFilesystem
            - readinessProbeMissing
            - livenessProbeMissing
            - cpuLimitsMissing
          - controllerNames:
            - cert-manager
            rules:
            - notReadOnlyRootFilesystem
            - runAsRootAllowed
            - readinessProbeMissing
            - livenessProbeMissing
          - controllerNames:
            - cluster-autoscaler
            rules:
            - notReadOnlyRootFilesystem
            - runAsRootAllowed
            - readinessProbeMissing
          - controllerNames:
            - vpa
            rules:
            - runAsRootAllowed
            - readinessProbeMissing
            - livenessProbeMissing
            - notReadOnlyRootFilesystem
          - controllerNames:
            - datadog
            rules:
            - runAsRootAllowed
            - readinessProbeMissing
            - livenessProbeMissing
            - notReadOnlyRootFilesystem
          - controllerNames:
            - nginx-ingress-controller
            rules:
            - privilegeEscalationAllowed
            - insecureCapabilities
            - runAsRootAllowed
          - controllerNames:
            - dns-controller
            - datadog-datadog
            - kube-flannel-ds
            - kube2iam
            - aws-iam-authenticator
            - datadog
            - kube2iam
            rules:
            - hostNetworkSet
          - controllerNames:
            - aws-iam-authenticator
            - aws-cluster-autoscaler
            - kube-state-metrics
            - dns-controller
            - external-dns
            - dnsmasq
            - autoscaler
            - kubernetes-dashboard
            - install-cni
            - kube2iam
            rules:
            - readinessProbeMissing
            - livenessProbeMissing
          - controllerNames:
            - aws-iam-authenticator
            - nginx-ingress-default-backend
            - aws-cluster-autoscaler
            - kube-state-metrics
            - dns-controller
            - external-dns
            - kubedns
            - dnsmasq
            - autoscaler
            - tiller
            - kube2iam
            rules:
            - runAsRootAllowed
          - controllerNames:
            - aws-iam-authenticator
            - nginx-ingress-controller
            - nginx-ingress-default-backend
            - aws-cluster-autoscaler
            - kube-state-metrics
            - dns-controller
            - external-dns
            - kubedns
            - dnsmasq
            - autoscaler
            - tiller
            - kube2iam
            rules:
            - notReadOnlyRootFilesystem
          - controllerNames:
            - cert-manager
            - dns-controller
            - kubedns
            - dnsmasq
            - autoscaler
            - insights-agent-goldilocks-vpa-install
            - datadog
            rules:
            - cpuRequestsMissing
            - cpuLimitsMissing
            - memoryRequestsMissing
            - memoryLimitsMissing
          - controllerNames:
            - kube2iam
            - kube-flannel-ds
            rules:
            - runAsPrivileged
          - controllerNames:
            - kube-hunter
            rules:
            - hostPIDSet
          - controllerNames:
            - polaris
            - kube-hunter
            - goldilocks
            - insights-agent-goldilocks-vpa-install
            rules:
            - notReadOnlyRootFilesystem
          - controllerNames:
            - insights-agent-goldilocks-controller
            rules:
            - livenessProbeMissing
            - readinessProbeMissing
          - controllerNames:
            - insights-agent-goldilocks-vpa-install
            - kube-hunter
            rules:
            - runAsRootAllowed
    ---
    apiVersion: v1
    kind: Service
    metadata:
      name: starboard-operator
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
    spec:
      type: ClusterIP
      ports:
        - port: 80
          targetPort: metrics
          name: metrics
      selector:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
    ---
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: starboard-operator
      namespace: starboard-system
      labels:
        app.kubernetes.io/name: starboard-operator
        app.kubernetes.io/instance: starboard-operator
        app.kubernetes.io/version: "0.13.2"
        app.kubernetes.io/managed-by: kubectl
    spec:
      replicas: 1
      strategy:
        type: Recreate
      selector:
        matchLabels:
          app.kubernetes.io/name: starboard-operator
          app.kubernetes.io/instance: starboard-operator
      template:
        metadata:
          labels:
            app.kubernetes.io/name: starboard-operator
            app.kubernetes.io/instance: starboard-operator
        spec:
          serviceAccountName: starboard-operator
          automountServiceAccountToken: true
          containers:
            - name: "starboard-operator"
              image: "docker.io/aquasec/starboard-operator:0.13.2"
              imagePullPolicy: IfNotPresent
              env:
                - name: OPERATOR_NAMESPACE
                  value: "starboard-system"
                - name: OPERATOR_TARGET_NAMESPACES
                  value: "default"
                - name: OPERATOR_SERVICE_ACCOUNT
                  value: "starboard-operator"
                - name: OPERATOR_LOG_DEV_MODE
                  value: "false"
                - name: OPERATOR_SCAN_JOB_TIMEOUT
                  value: "5m"
                - name: OPERATOR_CONCURRENT_SCAN_JOBS_LIMIT
                  value: "10"
                - name: OPERATOR_SCAN_JOB_RETRY_AFTER
                  value: "30s"
                - name: OPERATOR_BATCH_DELETE_LIMIT
                  value: "10"
                - name: OPERATOR_BATCH_DELETE_DELAY
                  value: "10s"
                - name: OPERATOR_METRICS_BIND_ADDRESS
                  value: ":8080"
                - name: OPERATOR_HEALTH_PROBE_BIND_ADDRESS
                  value: ":9090"
                - name: OPERATOR_CIS_KUBERNETES_BENCHMARK_ENABLED
                  value: "true"
                - name: OPERATOR_VULNERABILITY_SCANNER_ENABLED
                  value: "true"
                - name: OPERATOR_CONFIG_AUDIT_SCANNER_ENABLED
                  value: "true"
              ports:
                - name: metrics
                  containerPort: 8080
                - name: probes
                  containerPort: 9090
              readinessProbe:
                httpGet:
                  path: /readyz/
                  port: probes
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 3
              livenessProbe:
                httpGet:
                  path: /healthz/
                  port: probes
                initialDelaySeconds: 5
                periodSeconds: 10
                successThreshold: 1
                failureThreshold: 10
              resources:
                {}
              securityContext:
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                  - ALL
                privileged: false
                readOnlyRootFilesystem: true
          securityContext:
            {}
