apiVersion: addons.cluster.x-k8s.io/v1alpha3
kind: ClusterResourceSet
metadata:
  name: gadget-crs
spec:
  clusterSelector:
    matchExpressions:
    - key: tkg.tanzu.vmware.com/cluster-name
      operator: Exists
      values: []
  resources:
  - kind: ConfigMap
    name: gadget-crs
  strategy: ApplyOnce
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gadget-crs
data:
  data: |
    apiVersion: apiextensions.k8s.io/v1
    kind: CustomResourceDefinition
    metadata:
      annotations:
        controller-gen.kubebuilder.io/version: v0.4.1
      creationTimestamp: null
      name: traces.gadget.kinvolk.io
    spec:
      group: gadget.kinvolk.io
      names:
        kind: Trace
        listKind: TraceList
        plural: traces
        singular: trace
      scope: Namespaced
      versions:
      - name: v1alpha1
        schema:
          openAPIV3Schema:
            description: Trace is the Schema for the traces API
            properties:
              apiVersion:
                description: 'APIVersion defines the versioned schema of this representation
                  of an object. Servers should convert recognized schemas to the latest
                  internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
                type: string
              kind:
                description: 'Kind is a string value representing the REST resource this
                  object represents. Servers may infer this from the endpoint the client
                  submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                type: string
              metadata:
                type: object
              spec:
                description: TraceSpec defines the desired state of Trace
                properties:
                  filter:
                    description: Filter is to tell the gadget to filter events based on
                      namespace, pod name, labels or container name
                    properties:
                      containerName:
                        description: ContainerName selects events from containers with
                          this name
                        type: string
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels selects events from pods with these labels
                        type: object
                      namespace:
                        description: Namespace selects events from this pod namespace
                        type: string
                      podname:
                        description: Podname selects events from this pod name
                        type: string
                    type: object
                  gadget:
                    description: Gadget is the name of the gadget such as "seccomp"
                    type: string
                  node:
                    description: Node is the name of the node on which this trace should
                      run
                    type: string
                  output:
                    description: Output allows a gadget to output the results in the specified
                      location. * With OutputMode=Status|Stream, Output is unused * With
                      OutputMode=File, Output specifies the file path * With OutputMode=ExternalResource,
                      Output specifies the external   resource (such as   seccompprofiles.security-profiles-operator.x-k8s.io
                      for the   seccomp gadget)
                    type: string
                  outputMode:
                    description: OutputMode is "Status", "Stream", "File" or "ExternalResource"
                    enum:
                    - Status
                    - Stream
                    - File
                    - ExternalResource
                    type: string
                  runMode:
                    description: RunMode is "Auto" to automatically start the trace as
                      soon as the resource is created, or "Manual" to be controlled by
                      the "gadget.kinvolk.io/operation" annotation
                    type: string
                type: object
              status:
                description: TraceStatus defines the observed state of Trace
                properties:
                  operationError:
                    description: OperationError is the error returned by the gadget when
                      applying the annotation gadget.kinvolk.io/operation=
                    type: string
                  operationWarning:
                    description: OperationWarning is returned by the gadget to notify
                      about a malfunction when applying the annotation gadget.kinvolk.io/operation=.
                      Unlike the OperationError that represents a fatal error, the OperationWarning
                      could be ignored according to the context.
                    type: string
                  output:
                    description: Output is the output of the gadget
                    type: string
                  state:
                    description: State is "Started", "Stopped" or "Completed"
                    enum:
                    - Started
                    - Stopped
                    - Completed
                    type: string
                type: object
            type: object
        served: true
        storage: true
        subresources:
          status: {}
    status:
      acceptedNames:
        kind: ""
        plural: ""
      conditions: []
      storedVersions: []
    ---
    apiVersion: v1
    kind: Namespace
    metadata:
      name: gadget
    ---
    apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: gadget
      namespace: kube-system
    ---
    kind: ClusterRoleBinding
    apiVersion: rbac.authorization.k8s.io/v1
    metadata:
      name: gadget
    subjects:
    - kind: ServiceAccount
      name: gadget
      namespace: kube-system
    roleRef:
      kind: ClusterRole
      name: cluster-admin
      apiGroup: rbac.authorization.k8s.io
    ---
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: gadget
      namespace: kube-system
      labels:
        k8s-app: gadget
    spec:
      selector:
        matchLabels:
          k8s-app: gadget
      template:
        metadata:
          labels:
            k8s-app: gadget
          annotations:
            container.apparmor.security.beta.kubernetes.io/gadget: "unconfined"
            inspektor-gadget.kinvolk.io/option-hook-mode: "auto"
        spec:
          serviceAccount: gadget
          hostPID: true
          hostNetwork: true
          containers:
          - name: gadget
            image: docker.io/kinvolk/gadget:v0.4.2
            imagePullPolicy: Always
            command: [ "/entrypoint.sh" ]
            lifecycle:
              preStop:
                exec:
                  command:
                    - "/cleanup.sh"
            livenessProbe:
              initialDelaySeconds: 10
              periodSeconds: 5
              exec:
                command:
                  - /bin/gadgettracermanager
                  - -liveness
            env:
              - name: NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: GADGET_POD_UID
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.uid
              - name: TRACELOOP_NODE_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: spec.nodeName
              - name: TRACELOOP_POD_NAME
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.name
              - name: TRACELOOP_POD_NAMESPACE
                valueFrom:
                  fieldRef:
                    fieldPath: metadata.namespace
              - name: GADGET_IMAGE
                value: docker.io/kinvolk/gadget:v0.4.2
              - name: INSPEKTOR_GADGET_VERSION
                value: v0.4.2
              - name: INSPEKTOR_GADGET_OPTION_HOOK_MODE
                value: "auto"
              - name: INSPEKTOR_GADGET_OPTION_TOOLS_MODE
                value: "standard"
              - name: INSPEKTOR_GADGET_OPTION_FALLBACK_POD_INFORMER
                value: "true"
            securityContext:
              capabilities:
                add:
                  - NET_ADMIN
                  - SYS_ADMIN
                  - SYSLOG
                  - SYS_PTRACE
                  - SYS_RESOURCE
                  - IPC_LOCK
            volumeMounts:
            - name: host
              mountPath: /host
            - name: run
              mountPath: /run
            - name: modules
              mountPath: /lib/modules
            - name: debugfs
              mountPath: /sys/kernel/debug
            - name: cgroup
              mountPath: /sys/fs/cgroup
            - name: bpffs
              mountPath: /sys/fs/bpf
            - name: localtime
              mountPath: /etc/localtime
          tolerations:
          - effect: NoSchedule
            operator: Exists
          - effect: NoExecute
            operator: Exists
          volumes:
          - name: host
            hostPath:
              path: /
          - name: run
            hostPath:
              path: /run
          - name: cgroup
            hostPath:
              path: /sys/fs/cgroup
          - name: modules
            hostPath:
              path: /lib/modules
          - name: bpffs
            hostPath:
              path: /sys/fs/bpf
          - name: debugfs
            hostPath:
              path: /sys/kernel/debug
          - name: localtime
            hostPath:
              path: /etc/localtime
